#### DEPENDENCIES ####

- apt:
    package:
      - python3
      - python3-dev
      - python3-pip
      - python3-cryptography
      - aptitude
      - build-essential
      - libssl-dev
      - nginx
    state: present
  become: yes

- pip:
    executable: pip3
    name:
      - buildbot[tls] # buildbot master
      - buildbot-www
      - buildbot-waterfall-view
      - buildbot-console-view
      - buildbot-grid-view
    state: present
    extra_args: '-U'
  become: yes

- pip:
    executable: pip3
    name: service_identity
    state: forcereinstall
  become: yes

#### SETUP BUILDBOT ####

- user:
    name: buildmaster
    state: present
  become: yes

- shell: 'buildbot create-master -r ~/basedir'
  args:
    creates: /home/buildmaster/basedir
  become: yes
  become_user: buildmaster

- name: copy buildbot master config
  template:
    src: buildbot/master.cfg
    dest: /home/buildmaster/basedir/master.cfg
    owner: buildmaster
    group: buildmaster
  become: yes

- name: install buildbot-master service file
  template:
    src: etc/systemd/system/buildbot-master.service
    dest: /etc/systemd/system/buildbot-master.service
    mode: 0644
    owner: root
    group: root
  become: yes

- name: start buildbot-master.service
  systemd:
    name: buildbot-master
    daemon_reload: yes
    state: restarted
    enabled: yes
  become: yes

#### NGINX & CERTBOT ####

- name: check if cert exists
  stat:
    path: /etc/letsencrypt/live/ci.wisc.space/fullchain.pem
  register: certstat
  become: yes

- name: push http-only nginx config
  template:
    src: etc/nginx/sites-available/ci.wisc.space
    dest: /etc/nginx/sites-available/ci.wisc.space
    mode: 0644
    owner: root
    group: root
  vars:
    havecert: no
  when: not certstat.stat.exists
  become: yes

- name: link nginx config into sites-enabled
  file:
    src: /etc/nginx/sites-available/ci.wisc.space
    dest: /etc/nginx/sites-enabled/ci.wisc.space
    owner: root
    group: root
    state: link
  become: yes

- service:
    name: nginx
    state: restarted
  become: yes
  when: not certstat.stat.exists

- name: get certificate
  shell: 'certbot certonly --non-interactive --agree-tos -m {{le_email}} --webroot -w /var/www/challenges -d ci.wisc.space'
  become: yes
  when: not certstat.stat.exists

- template:
    src: etc/nginx/sites-available/ci.wisc.space
    dest: /etc/nginx/sites-available/ci.wisc.space
    mode: 0644
    owner: root
    group: root
  vars:
    havecert: yes
  become: yes

- service:
    name: nginx
    state: restarted
  become: yes
