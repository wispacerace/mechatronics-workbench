# - name: install Rust for buildbot user
#   shell: "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable"
#   become: yes
#   become_user: buildbot

# - name: add thumbv7em-none-eabihf target to Rust
#   shell: "~/.cargo/bin/rustup target add thumbv7em-none-eabihf"
#   become: yes
#   become_user: buildbot

- name: add kitware repo key
  apt_key:
    url: https://apt.kitware.com/keys/kitware-archive-latest.asc
  become: yes

- name: add kitware apt repository
  apt_repository:
    repo: 'deb https://apt.kitware.com/ubuntu/ bionic main'
  become: yes

- name: update cmake
  apt:
    package: cmake
    state: latest
    update_cache: yes
  become: yes

- name: install gdb-multiarch
  apt:
    package: gdb-multiarch
    state: present
  become: yes

- name: check if arm gcc toolchain is already installed
  stat:
    path: /usr/local/arm-none-eabi
  register: gcc_toolchain

- name: download and unpack arm gcc toolchain
  unarchive:
    remote_src: yes
    src: 'https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2'
    dest: /tmp/
  when: not gcc_toolchain.stat.exists

- name: find the unpacked toolchain folder
  find:
    paths: /tmp
    patterns: 'gcc-arm-none-eabi-*'
    file_type: directory
  register: found_toolchain
  when: not gcc_toolchain.stat.exists

- name: move toolchain files into /usr/local
  shell: "rsync -rlD {{found_toolchain['files'][0]['path']}}/ /usr/local"
  become: yes
  when: not gcc_toolchain.stat.exists